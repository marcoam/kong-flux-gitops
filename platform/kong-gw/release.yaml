apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kong
spec:
  interval: 5m
  chart:
    spec:
      chart: kong
      version: 2.13.1
      sourceRef:
        kind: HelmRepository
        name: kong
        namespace: flux-system
      interval: 1m
  values:
    image:
      repository: kong/kong-gateway
      tag: "2.8-alpine"
    env:
      prefix: /kong_prefix/
      database: postgres
      proxy_url: http://kong-proxy-mm.kong-sales-engineering.com
      admin_api_uri: http://kong-admin-mm.kong-sales-engineering.com
      admin_gui_url: http://kong-manager-mm.kong-sales-engineering.com
      portal_gui_host: kong-portal-mm.kong-sales-engineering.com
      portal_api_url: http://kong-portalapi-mm.kong-sales-engineering.com
      portal_gui_protocol: http
      password:
        valueFrom:
          secretKeyRef:
            name: kong-enterprise-superuser-password
            key: password
      portal_auth: basic-auth
      portal_session_conf:
        valueFrom:
          secretKeyRef:
            name: kong-session-config
            key: portal_session_conf
    admin:
      enabled: true
      type: ClusterIP
      annotations: {}
      http:
        enabled: true
        servicePort: 8001
        containerPort: 8001
        parameters: []
      tls:
        enabled: false
        servicePort: 8444
        containerPort: 8444
        parameters:
          - http2
      ingress:
        enabled: true
        hostname: kong-admin-mm.kong-sales-engineering.com
        annotations:
          kubernetes.io/ingress.class: "kong"
        path: /
    proxy:
      enabled: true
      type: LoadBalancer
      loadBalancerIP: ""
      annotations:
        # If using https, change the value below
        konghq.com/protocol: "http"
      http:
        enabled: true
        servicePort: 80
        containerPort: 8000
        parameters: []
      tls:
        enabled: true
        servicePort: 443
        containerPort: 8443
        parameters:
          - http2
      stream: {}
      ingress:
        enabled: false
        annotations: {}
        path: /
      externalIPs: []
    enterprise:
      enabled: true
      license_secret: kong-enterprise-license
      vitals:
        enabled: true
      portal:
        enabled: true
      rbac:
        enabled: false
        admin_gui_auth: basic-auth
        session_conf_secret: kong-session-config
        #admin_gui_auth_conf_secret: admin-gui-auth-conf-secret
      smtp:
        enabled: false
        portal_emails_from: none@example.com
        portal_emails_reply_to: none@example.com
        admin_emails_from: none@example.com
        admin_emails_reply_to: none@example.com
        smtp_admin_emails: none@example.com
        smtp_host: smtp.example.com
        smtp_port: 587
        smtp_auth_type: ''
        smtp_ssl: nil
        smtp_starttls: true
        auth:
          smtp_username: '' # e.g. postmaster@example.com
          smtp_password_secret: smtp-password
    manager:
      enabled: true
      type: ClusterIP
      annotations: {}
      http:
        enabled: true
        servicePort: 8002
        containerPort: 8002
        parameters: []
      tls:
        enabled: false
        servicePort: 8445
        containerPort: 8445
        parameters:
          - http2
      ingress:
        enabled: true
        hostname: kong-manager-mm.kong-sales-engineering.com
        annotations:
          kubernetes.io/ingress.class: "kong"
        path: /
      externalIPs: []
    portal:
      enabled: true
      type: ClusterIP
      annotations: {}
      http:
        enabled: true
        servicePort: 8003
        containerPort: 8003
        parameters: []
      tls:
        enabled: false
        servicePort: 8446
        containerPort: 8446
        parameters:
          - http2
      ingress:
        enabled: true
        hostname: kong-portal-mm.kong-sales-engineering.com
        annotations:
          kubernetes.io/ingress.class: "kong"
        path: /
      externalIPs: []
    portalapi:
      enabled: true
      type: ClusterIP
      annotations: {}
      http:
        enabled: true
        servicePort: 8004
        containerPort: 8004
        parameters: []
      tls:
        enabled: false
        servicePort: 8447
        containerPort: 8447
        parameters:
          - http2
      ingress:
        enabled: true
        hostname: kong-portalapi-mm.kong-sales-engineering.com
        annotations:
          kubernetes.io/ingress.class: "kong"
        path: /
      externalIPs: []
    postgresql:
      # When postgresql is enabled, the Kong helm chart uses the postgresql sub-chart and launches a PostgreSQL database as a pod
      # within the kong namespace. If you do not explicitly set a password, the postgresql chart generates a random password.
      # In a production type environment, it may be best to set "enabled: false" and run a PostgreSQL database outside of the Kong database.
      #
      # If you use an external database, you will set the pg_password in the "env" section using a value from a secret.
      # see  https://docs.konghq.com/gateway/latest/reference/configuration/#postgres-settings
      enabled: true
      auth:
        username: kong
        database: kong
    ingressController:
      enabled: true
      installCRDs: false
      env:
        kong_admin_token:
          valueFrom:
            secretKeyRef:
              name: kong-enterprise-superuser-password
              key: password